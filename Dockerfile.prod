FROM python:3.8.5-alpine as builder

WORKDIR /app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN echo -e "https://nl.alpinelinux.org/alpine/v3.12/main\nhttps://nl.alpinelinux.org/alpine/v3.12/community" > /etc/apk/repositories
RUN apk update
RUN apk add --no-cache mariadb-connector-c-dev
RUN apk add bash tk python3 python3-dev mariadb-dev build-base
RUN apk add netcat-openbsd libffi-dev jpeg-dev zlib-dev libjpeg

RUN pip3 install pip --upgrade
RUN pip3 install mysqlclient

COPY . /app


RUN pip3 wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r requirements.txt

#########
# FINAL #
#########

FROM python:3.8.5-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add --no-cache mariadb-connector-c-dev mariadb-client tk
RUN apk add --update --no-cache g++ gcc libxslt-dev
COPY --from=builder /app/wheels /wheels
COPY --from=builder /app/requirements.txt .
RUN pip3 install --no-cache /wheels/*
RUN pip3 install lxml
# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
#RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
